@startuml

package termproject {
    class Post {
        - name: String
    }

    class FinancialAidForm {
        - applicantName: String
        - applicantReason: String
        {method} apply(s: Student)
    }

    class NoticeBoard {
        - posts: Post[*]
    }

    class Warning {
        - status: String
        - active: Boolean
    }

    class Graduation {
        - graduationMonth: Integer
    }

    class Job {
        - startingDate: Integer
    }

    class Student {
        - name: String
        - section: String
        - rollNumber: Integer
        - CNIC: Integer
        - batch: Integer
        - CGPA: Real
        - indigent: Boolean
        - approvalAcquired: Boolean
        - warningCount: Integer
        - currentDegreeDuration: Integer
        - feeDefaulterApproved: Boolean
        - realNeedOfAssistance: Boolean
        {property} loan: Loan[?]
        {property} scholarship: Scholarship[?]
        {property} degree: DegreeProgram[1]
        {property} transcript: Transcript[1]
        {property} warnings: Warning[*|1]
        {property} job: Job[?]
        {property} graduation: Graduation[?]
        {method} giveExam()
    }

    class DegreeProgram {
        - name: String
        - type: Type
        - warningCount: Integer
        - minCGPA: Real
        - maxTime: Integer
        - onWarning: Boolean
        {property} coreCourses: Course[*]
        {property} electiveCourses: Course[*]
    }

    class Transcript {
        {property} semesters: Semester[*|1]
        {property} displayedCourses: Course[*|1]
    }

    class Semester {
        - name: String
        - year: Integer
        - SGPA: Real
        - CGPA: Real
        - creditAttended: Integer
        - creditEarned: Integer
        - withdrawalDeadline: Date
        - finished: Boolean
        - startingInNumWeeks: Integer
        {property} enrolledCourses: Course[*|1]
        {property} offeredCourses: Course[*|1]
        {property} fee: Fee[1]
    }

    class Department {
        - name: String
        - HOD: String
        {property} offeredCourses: Course[*|1]
        {method} grantApprovalWarning()
        {method} grantDefaulterApproval()
        {method} grantRetakeApproval()
    }

    class Marks {
        - quizMarks: Real
        - assignmentMarks: Real
        - midMarks: Real
        - finalMarks: Real
        - projectMarks: Real
    }

    class Date {
        - year: Integer
        - month: Integer
        - day: Integer
    }

    class Course {
        - courseName: String
        - courseCode: String
        - creditHours: Integer
        - repeatCount: Integer
        - currentDate: Date
        - announcedDate: Date
        - registrationDate: Date
        - canAppearInExam: Boolean
        - grade: Grade
        - status: CourseStatus
        - importance: CourseImportance
        - resultsAnnounced: Boolean
        - retakeApproved: Boolean
        {method} requestGradeChange()
        {method} requestRetake()
        {method} Register()
        {method} Drop()
        {method} Withdraw(): Boolean[1]
        {property} attendance: Attendance[1]
        {property} semester: Semester[1]
        {property} studiedBy: Student[*]
        {property} marks: Marks[1]
    }

    class Attendance {
        - numLectures: Integer
        - attendancePercentage: Real
    }

    class University {
        - name: String
        - ranking: Integer
    }

    class Campus {
        - location: String
        {property} meritList: MeritList[1]
        {property} studentList: Student[*|1]
        {property} departmentList: Department[*|1]
    }

    class MeritList {
        {property} positionHolders: PositionHolder[*|1]
    }

    class PositionHolder {
        - paper: Paper
    }

    class Loan {
        - eligible: Real
        - renewalCriteriaMet: Boolean
        - assistanceType: String
        - repaymentStartMonth: Integer
        - repaymentEndMonths: Integer
        - renewedEverySemester: Boolean
        {method} applyForLoan(s: Student)
    }

    class Scholarship {
        - offered: Boolean
        - awarded: Boolean
        - coverage: Real
        - numSems: Integer
    }

    class Fee {
        - amount: Integer
        - refund: Boolean
        - paid: Boolean
        - paymentMethod: String
        - dueInWeeks: Integer
        - type: FeeType
    }
}

enum FeeType {
    Normal
    Security
}

enum Grade {
    A
    B
    C
    D
    E
    F
    W
}

enum CourseStatus {
    passed
    failed
    withdrawn
    dropped
    repeated
}

enum CourseImportance {
    elective
    core
}

enum Paper {
    board
    NU
}

enum Type {
    MS
    BS
}

@enduml
